#!/bin/bash

helpmsg() {
    echo -e 'usage: ./tt [total entries] ($@)\n'
    echo -e '   -b, --begin     first job index'
    echo -e '   -d, --dryrun    debug commands without execution'
    echo -e '   -f, --file      output commands'
    echo -e '   -g, --group     group identifier'
    echo -e '   -h, --help      show (this) help message'
    echo -e '   -j, --jobs      jobs relative to number of cores'
    echo -e '   -n, --nice      be nice'
    echo -e '   -s, --size      size of each slice\n'
}

ARGS=()

while [ $# -gt 0 ]; do
    case "$1" in
        -b)             BEGIN="$2"; shift 2 ;;
        --begin=*)      BEGIN="${1#*=}"; shift ;;
        -d|--dryrun)    dryrun=1; shift ;;
        -f)             FILE="$2"; shift 2 ;;
        --file=*)       FILE="${1#*=}"; shift ;;
        -g)             GROUP="$2"; shift 2 ;;
        --group=*)      GROUP="${1#*=}"; shift ;;
        -h|--help)      helpmsg; exit ;;
        -j)             JOBS="$2"; shift 2 ;;
        --jobs=*)       JOBS="${1#*=}"; shift ;;
        -n)             NICE="$2"; shift 2 ;;
        --nice=*)       NICE="${1#*=}"; shift ;;
        -s)             SIZE="$2"; shift 2 ;;
        --size=*)       SIZE="${1#*=}"; shift ;;
        -*|--*)         [[ $1 =~ ^-?[0-9]+$ ]] && \
                            { ARGS+=("$1"); shift; } || \
                            { echo -e "invalid option: $1\n"; exit 1; } ;;
        *)              ARGS+=("$1"); shift ;;
    esac
done

set -- "${ARGS[@]}"

[ $# -lt 3 ] && { helpmsg; exit 1; }

ENTRIES=$1
[ $ENTRIES -le 0 ] && {
    echo -e "error: negative total entries: $ENTRIES\n"; exit 1; }

BEGIN=${BEGIN:-0}
FLAGS="--linebuffer"
[ $dryrun ] && FLAGS+=" --dryrun"
GROUP=${GROUP:-"def"}
JOBS=${JOBS:-"-4"}
NICE=${NICE:-10}
SIZE=${SIZE:-1024}
SLICES=$(( ($ENTRIES - 1) / $SIZE ))

EXEC=eval
[ -n "$FILE" ] && { EXEC=echo; exec &>> $FILE; }

$EXEC 'make transmute_trees || exit 1';

BASE=$(basename $3 .root)
for SLICE in $(seq $BEGIN $SLICES ); do
    START=$(( $SLICE * $SIZE ))
    END=$(( ($SLICE + 1) * $SIZE ))
    CMD='nice -n $NICE sem -j$JOBS --id sem-grp-tt-$GROUP $FLAGS \
            "./transmute_trees $2 ${3}.$SLICE $START $END ${@:4} \
            &> notes/log-tt-$BASE-$ENTRIES-${SLICE}.log"'
    $EXEC `eval echo $CMD`
done
$EXEC sem --wait --id sem-grp-tt-$GROUP

[ $dryrun ] && exit 0

TIMESTAMP=$(date +"%F-%H_%M_%S")
$EXEC `eval echo 'ls ${3}."*" ">" notes/tt-merge-$BASE-$TIMESTAMP'`;
$EXEC `eval echo ./keep/ladd notes/tt-merge-$BASE-$TIMESTAMP $3`;

[ -n "$FILE" ] && {
    sort $FILE -u -o $FILE.tmp;
    grep make $FILE.tmp > $FILE;
    grep transmute_trees $FILE.tmp | grep -v make >> $FILE;
    grep -- '--wait' $FILE.tmp >> $FILE;
    grep ls $FILE.tmp >> $FILE;
    grep ladd $FILE.tmp >> $FILE;
    rm $FILE.tmp
}

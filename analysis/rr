#!/bin/bash

make reap_results || exit 1

if [[ $# -lt 3 ]]; then
    echo -e 'usage: ./rr [input] [label] (-1) ($@)'
    echo -e 'usage: ./rr [input] [label] [0] [cmin cmax] ($@)'
    echo -e 'usage: ./rr [input] [label] [interval] ($@)\n'
    ./reap_results
    exit 1
fi

make merge_monads || exit 1
make collect_cents || exit 1

TYPES=(12 13 14 23 24 34 15 16 17)
if [[ $3 -gt 0 ]]; then
    for TYPE in ${TYPES[@]}; do
        for (( CMAX=20; CMAX>=$3; CMAX-=$3 )); do
            CMIN=$(( CMAX - $3 ))
            sem -j+0 --linebuffer \
                    "./reap_results $TYPE $1 $2.a.$CMIN.$CMAX \
                    $CMIN $CMAX $4.a.$CMIN.$CMAX $5 ${@:6} \
                    > notes/log-rr-$2.a.$CMIN.$CMAX-$TYPE.log; \
                    mv correction-$2.a.$CMIN.$CMAX-$TYPE.root output/"
        done
    done
    sem --wait

    for (( CMAX=20; CMAX>=$3; CMAX-=$3 )); do
        CMIN=$(( CMAX - $3 ))
        ./merge_monads $2.a.$CMIN.$CMAX
    done

    ./collect_cents $2.a $3
elif [[ $3 -eq 0 ]]; then
    [[ $# -lt 5 ]] && exit 2

    for TYPE in ${TYPES[@]}; do
        sem -j+0 --linebuffer \
                "./reap_results $TYPE $1 $2.s.$4.$5 \
                $4 $5 $6.s.$4.$5 $7 ${@:8} \
                > notes/log-rr-$2.s.$4.$5-$TYPE.log; \
                mv correction-$2.s.$4.$5-$TYPE.root output/"
    done
    sem --wait

    ./merge_monads $2.s.$4.$5
else
    for TYPE in ${TYPES[@]}; do
        sem -j+0 --linebuffer \
                "./reap_results $TYPE ${@:1:2} \
                0 20 ${@:4} \
                > notes/log-rr-$2-$TYPE.log; \
                mv correction-$2-$TYPE.root output/"
    done
    sem --wait

    ./merge_monads $2
fi
